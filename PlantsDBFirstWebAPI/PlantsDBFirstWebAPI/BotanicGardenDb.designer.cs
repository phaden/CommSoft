#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlantsDBFirstWebAPI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	public partial class BotanicGardenDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblPlant(tblPlant instance);
    partial void UpdatetblPlant(tblPlant instance);
    partial void DeletetblPlant(tblPlant instance);
    partial void InserttblSpecy(tblSpecy instance);
    partial void UpdatetblSpecy(tblSpecy instance);
    partial void DeletetblSpecy(tblSpecy instance);
    partial void InserttblCollection(tblCollection instance);
    partial void UpdatetblCollection(tblCollection instance);
    partial void DeletetblCollection(tblCollection instance);
    #endregion
		
		public BotanicGardenDbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DataSourceConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BotanicGardenDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BotanicGardenDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BotanicGardenDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BotanicGardenDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblPlant> tblPlants
		{
			get
			{
				return this.GetTable<tblPlant>();
			}
		}
		
		public System.Data.Linq.Table<tblSpecy> tblSpecies
		{
			get
			{
				return this.GetTable<tblSpecy>();
			}
		}
		
		public System.Data.Linq.Table<tblCollection> tblCollections
		{
			get
			{
				return this.GetTable<tblCollection>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlant")]
	public partial class tblPlant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _plantID;
		
		private System.Nullable<int> _speciesID;
		
		private System.Nullable<int> _collectionID;
		
		private System.Nullable<decimal> _latitude;
		
		private System.Nullable<decimal> _longitude;
		
		private string _plantDescription;
		
		private System.Nullable<System.DateTime> _recordCreated;
		
		private System.Nullable<System.DateTime> _recordModified;
		
		private EntityRef<tblSpecy> _tblSpecy;
		
		private EntityRef<tblCollection> _tblCollection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnplantIDChanging(int value);
    partial void OnplantIDChanged();
    partial void OnspeciesIDChanging(System.Nullable<int> value);
    partial void OnspeciesIDChanged();
    partial void OncollectionIDChanging(System.Nullable<int> value);
    partial void OncollectionIDChanged();
    partial void OnlatitudeChanging(System.Nullable<decimal> value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(System.Nullable<decimal> value);
    partial void OnlongitudeChanged();
    partial void OnplantDescriptionChanging(string value);
    partial void OnplantDescriptionChanged();
    partial void OnrecordCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnrecordCreatedChanged();
    partial void OnrecordModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnrecordModifiedChanged();
    #endregion
		
		public tblPlant()
		{
			this._tblSpecy = default(EntityRef<tblSpecy>);
			this._tblCollection = default(EntityRef<tblCollection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plantID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int plantID
		{
			get
			{
				return this._plantID;
			}
			set
			{
				if ((this._plantID != value))
				{
					this.OnplantIDChanging(value);
					this.SendPropertyChanging();
					this._plantID = value;
					this.SendPropertyChanged("plantID");
					this.OnplantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speciesID", DbType="Int")]
		public System.Nullable<int> speciesID
		{
			get
			{
				return this._speciesID;
			}
			set
			{
				if ((this._speciesID != value))
				{
					if (this._tblSpecy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnspeciesIDChanging(value);
					this.SendPropertyChanging();
					this._speciesID = value;
					this.SendPropertyChanged("speciesID");
					this.OnspeciesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_collectionID", DbType="Int")]
		public System.Nullable<int> collectionID
		{
			get
			{
				return this._collectionID;
			}
			set
			{
				if ((this._collectionID != value))
				{
					if (this._tblCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncollectionIDChanging(value);
					this.SendPropertyChanging();
					this._collectionID = value;
					this.SendPropertyChanged("collectionID");
					this.OncollectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plantDescription", DbType="VarChar(255)")]
		public string plantDescription
		{
			get
			{
				return this._plantDescription;
			}
			set
			{
				if ((this._plantDescription != value))
				{
					this.OnplantDescriptionChanging(value);
					this.SendPropertyChanging();
					this._plantDescription = value;
					this.SendPropertyChanged("plantDescription");
					this.OnplantDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recordCreated", DbType="Date")]
		public System.Nullable<System.DateTime> recordCreated
		{
			get
			{
				return this._recordCreated;
			}
			set
			{
				if ((this._recordCreated != value))
				{
					this.OnrecordCreatedChanging(value);
					this.SendPropertyChanging();
					this._recordCreated = value;
					this.SendPropertyChanged("recordCreated");
					this.OnrecordCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recordModified", DbType="Date")]
		public System.Nullable<System.DateTime> recordModified
		{
			get
			{
				return this._recordModified;
			}
			set
			{
				if ((this._recordModified != value))
				{
					this.OnrecordModifiedChanging(value);
					this.SendPropertyChanging();
					this._recordModified = value;
					this.SendPropertyChanged("recordModified");
					this.OnrecordModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSpecy_tblPlant", Storage="_tblSpecy", ThisKey="speciesID", OtherKey="speciesID", IsForeignKey=true)]
		public tblSpecy tblSpecy
		{
			get
			{
				return this._tblSpecy.Entity;
			}
			set
			{
				tblSpecy previousValue = this._tblSpecy.Entity;
				if (((previousValue != value) 
							|| (this._tblSpecy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSpecy.Entity = null;
						previousValue.tblPlants.Remove(this);
					}
					this._tblSpecy.Entity = value;
					if ((value != null))
					{
						value.tblPlants.Add(this);
						this._speciesID = value.speciesID;
					}
					else
					{
						this._speciesID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblSpecy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCollection_tblPlant", Storage="_tblCollection", ThisKey="collectionID", OtherKey="collectionID", IsForeignKey=true)]
		public tblCollection tblCollection
		{
			get
			{
				return this._tblCollection.Entity;
			}
			set
			{
				tblCollection previousValue = this._tblCollection.Entity;
				if (((previousValue != value) 
							|| (this._tblCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCollection.Entity = null;
						previousValue.tblPlants.Remove(this);
					}
					this._tblCollection.Entity = value;
					if ((value != null))
					{
						value.tblPlants.Add(this);
						this._collectionID = value.collectionID;
					}
					else
					{
						this._collectionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCollection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSpecies")]
	public partial class tblSpecy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _speciesID;
		
		private string _commonName;
		
		private string _scientificName;
		
		private string _speciesDescription;
		
		private System.Nullable<int> _imgResourceID;
		
		private EntitySet<tblPlant> _tblPlants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnspeciesIDChanging(int value);
    partial void OnspeciesIDChanged();
    partial void OncommonNameChanging(string value);
    partial void OncommonNameChanged();
    partial void OnscientificNameChanging(string value);
    partial void OnscientificNameChanged();
    partial void OnspeciesDescriptionChanging(string value);
    partial void OnspeciesDescriptionChanged();
    partial void OnimgResourceIDChanging(System.Nullable<int> value);
    partial void OnimgResourceIDChanged();
    #endregion
		
		public tblSpecy()
		{
			this._tblPlants = new EntitySet<tblPlant>(new Action<tblPlant>(this.attach_tblPlants), new Action<tblPlant>(this.detach_tblPlants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speciesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int speciesID
		{
			get
			{
				return this._speciesID;
			}
			set
			{
				if ((this._speciesID != value))
				{
					this.OnspeciesIDChanging(value);
					this.SendPropertyChanging();
					this._speciesID = value;
					this.SendPropertyChanged("speciesID");
					this.OnspeciesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commonName", DbType="VarChar(50)")]
		public string commonName
		{
			get
			{
				return this._commonName;
			}
			set
			{
				if ((this._commonName != value))
				{
					this.OncommonNameChanging(value);
					this.SendPropertyChanging();
					this._commonName = value;
					this.SendPropertyChanged("commonName");
					this.OncommonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scientificName", DbType="VarChar(50)")]
		public string scientificName
		{
			get
			{
				return this._scientificName;
			}
			set
			{
				if ((this._scientificName != value))
				{
					this.OnscientificNameChanging(value);
					this.SendPropertyChanging();
					this._scientificName = value;
					this.SendPropertyChanged("scientificName");
					this.OnscientificNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speciesDescription", DbType="VarChar(255)")]
		public string speciesDescription
		{
			get
			{
				return this._speciesDescription;
			}
			set
			{
				if ((this._speciesDescription != value))
				{
					this.OnspeciesDescriptionChanging(value);
					this.SendPropertyChanging();
					this._speciesDescription = value;
					this.SendPropertyChanged("speciesDescription");
					this.OnspeciesDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imgResourceID", DbType="Int")]
		public System.Nullable<int> imgResourceID
		{
			get
			{
				return this._imgResourceID;
			}
			set
			{
				if ((this._imgResourceID != value))
				{
					this.OnimgResourceIDChanging(value);
					this.SendPropertyChanging();
					this._imgResourceID = value;
					this.SendPropertyChanged("imgResourceID");
					this.OnimgResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSpecy_tblPlant", Storage="_tblPlants", ThisKey="speciesID", OtherKey="speciesID")]
		public EntitySet<tblPlant> tblPlants
		{
			get
			{
				return this._tblPlants;
			}
			set
			{
				this._tblPlants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPlants(tblPlant entity)
		{
			this.SendPropertyChanging();
			entity.tblSpecy = this;
		}
		
		private void detach_tblPlants(tblPlant entity)
		{
			this.SendPropertyChanging();
			entity.tblSpecy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCollection")]
	public partial class tblCollection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _collectionID;
		
		private string _collectionName;
		
		private string _collectionDescription;
		
		private EntitySet<tblPlant> _tblPlants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncollectionIDChanging(int value);
    partial void OncollectionIDChanged();
    partial void OncollectionNameChanging(string value);
    partial void OncollectionNameChanged();
    partial void OncollectionDescriptionChanging(string value);
    partial void OncollectionDescriptionChanged();
    #endregion
		
		public tblCollection()
		{
			this._tblPlants = new EntitySet<tblPlant>(new Action<tblPlant>(this.attach_tblPlants), new Action<tblPlant>(this.detach_tblPlants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_collectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int collectionID
		{
			get
			{
				return this._collectionID;
			}
			set
			{
				if ((this._collectionID != value))
				{
					this.OncollectionIDChanging(value);
					this.SendPropertyChanging();
					this._collectionID = value;
					this.SendPropertyChanged("collectionID");
					this.OncollectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_collectionName", DbType="VarChar(50)")]
		public string collectionName
		{
			get
			{
				return this._collectionName;
			}
			set
			{
				if ((this._collectionName != value))
				{
					this.OncollectionNameChanging(value);
					this.SendPropertyChanging();
					this._collectionName = value;
					this.SendPropertyChanged("collectionName");
					this.OncollectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_collectionDescription", DbType="VarChar(255)")]
		public string collectionDescription
		{
			get
			{
				return this._collectionDescription;
			}
			set
			{
				if ((this._collectionDescription != value))
				{
					this.OncollectionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._collectionDescription = value;
					this.SendPropertyChanged("collectionDescription");
					this.OncollectionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCollection_tblPlant", Storage="_tblPlants", ThisKey="collectionID", OtherKey="collectionID")]
		public EntitySet<tblPlant> tblPlants
		{
			get
			{
				return this._tblPlants;
			}
			set
			{
				this._tblPlants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPlants(tblPlant entity)
		{
			this.SendPropertyChanging();
			entity.tblCollection = this;
		}
		
		private void detach_tblPlants(tblPlant entity)
		{
			this.SendPropertyChanging();
			entity.tblCollection = null;
		}
	}
}
#pragma warning restore 1591
